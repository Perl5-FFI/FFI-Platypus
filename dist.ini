name             = FFI-Platypus
author           = Graham Ollis <plicease@cpan.org>
license          = Perl_5
copyright_holder = Graham Ollis
copyright_year   = 2015,2016,2017,2018
version          = 0.68_01

; authordep ExtUtils::MakeMaker 7.14
; authordep Alien::FFI

[@Author::Plicease]
:version = 2.31
release_tests = 1
installer     = Author::Plicease::MakeMaker
copy_mm       = 1
allow_dirty   = Makefile.PL
diag          = +Alien::Base
diag          = +PkgConfig
irc           = irc://irc.perl.org/#native
travis_status = 1
appveyor      = dn0iuv0k7ld4ek2i
github_user   = Perl5-FFI
github_repo   = FFI-Platypus

underscore_eval_version = 0

diag_preamble = | $post_diag = sub {
diag_preamble = |   eval {
diag_preamble = |     use Alien::FFI;
diag_preamble = |     use FFI::Platypus;
diag_preamble = |     use FFI::Platypus::Memory;
diag_preamble = |     diag "Alien::FFI version       = ", $Alien::FFI::VERSION;
diag_preamble = |     diag "Alien::FFI->install_type = ", Alien::FFI->install_type;
diag_preamble = |     diag "Alien::FFI->cflags       = ", Alien::FFI->cflags;
diag_preamble = |     diag "Alien::FFI->libs         = ", Alien::FFI->libs;
diag_preamble = |     diag "Alien::FFI->dist_dir     = ", eval { Alien::FFI->dist_dir } || 'undef';
diag_preamble = |     diag "Alien::FFI->version      = ", eval { Alien::FFI->config('version') } || 'unknown';
diag_preamble = |     diag "my_configure             = ", Alien::FFI->runtime_prop->{my_configure} if defined Alien::FFI->runtime_prop->{my_configure};
diag_preamble = |     spacer();
diag_preamble = |     require FFI::Platypus::ShareConfig;
diag_preamble = |     my $share_config = 'FFI::Platypus::ShareConfig';
diag_preamble = |     my %type_map = %{ $share_config->get('type_map') };
diag_preamble = |     my $diag = $share_config->get('diag');
diag_preamble = |     foreach my $key (sort keys %{ $diag->{args} })
diag_preamble = |     {
diag_preamble = |       diag "mb.args.$key=", $diag->{args}->{$key};
diag_preamble = |     }
diag_preamble = |     foreach my $key (sort keys %{ $diag->{config} })
diag_preamble = |     {
diag_preamble = |       diag "config.$key=", $diag->{config}->{$key};
diag_preamble = |     }
diag_preamble = |     diag "ffi.platypus.memory.strdup_impl=$FFI::Platypus::Memory::_strdup_impl";
diag_preamble = |     spacer();  
diag_preamble = |     my %r;
diag_preamble = |     while(my($k,$v) = each %type_map)
diag_preamble = |     {
diag_preamble = |       push @{ $r{$v} }, $k;
diag_preamble = |     }
diag_preamble = |     diag "Types:";
diag_preamble = |     foreach my $type (sort keys %r)
diag_preamble = |     {
diag_preamble = |       diag sprintf("  %-8s : %s", $type, join(', ', sort @{ $r{$type} }));
diag_preamble = |     }
diag_preamble = |     spacer();
diag_preamble = |     my $abi = FFI::Platypus->abis;
diag_preamble = |     diag "ABIs:";
diag_preamble = |     foreach my $key (sort keys %$abi)
diag_preamble = |     {
diag_preamble = |       diag sprintf("  %-20s %s", $key, $abi->{$key});
diag_preamble = |     }
diag_preamble = |     spacer();
diag_preamble = |     diag "Probes:";
diag_preamble = |     my $probe = $share_config->get("probe");
diag_preamble = |     diag sprintf("  %-20s %s", $_, $probe->{$_}) for keys %$probe;
diag_preamble = |   };
diag_preamble = |   diag "extended diagnostic failed: $@" if $@;

diag_preamble = |   if(-f "/proc/cpuinfo")
diag_preamble = |   {
diag_preamble = |     open my $fh, '<', '/proc/cpuinfo';
diag_preamble = |     my @lines = <$fh>;
diag_preamble = |     close $fh;
diag_preamble = |     my($model_name)    = grep /^model name/, @lines;
diag_preamble = |     my($flags)         = grep /^flags/, @lines;
diag_preamble = |     my($address_sizes) = grep /^address sizes/, @lines;
diag_preamble = |     spacer();
diag_preamble = |     diag "CPU Info:";
diag_preamble = |     diag "  $model_name";
diag_preamble = |     diag "  $flags" if $flags;;
diag_preamble = |     diag "  $address_sizes" if $address_sizes;
diag_preamble = |   }

diag_preamble = |   require IPC::Cmd;
diag_preabmle = |   require Capture::Tiny;
diag_preamble = |   if(IPC::Cmd::can_run('lsb_release'))
diag_preamble = |   {
diag_preamble = |     spacer();
diag_preamble = |     diag Capture::Tiny::capture_merged(sub {
diag_preamble = |       system 'lsb_release', '-a';
diag_preamble = |       ();
diag_preamble = |     });
diag_preamble = |   }

diag_preamble = | };

[RemovePrereqs]

; comes with Perl 5.8.1 or better
remove = strict
remove = warnings
remove = base
remove = overload
remove = open
remove = bytes
remove = utf8
remove = if
remove = XSLoader
remove = File::Spec
remove = File::Copy
remove = Scalar::Util
remove = Exporter
remove = Carp
remove = Encode
remove = File::Glob
remove = File::Path
remove = Text::ParseWords
remove = Data::Dumper

; comes with Strawberry (only place we use it)
remove = Win32
remove = Win32::Process
remove = Win32API::File

[Prereqs / ConfigurePrereqs]
-phase = configure
Alien::FFI = 0.20
ExtUtils::MakeMaker = 7.12

[Prereqs / BuildPrereqs]
-phase = build
Config::AutoConf = 0.309
ExtUtils::CBuilder = 0

[Prereqs / TestPrereqs]
-phase = test
Alien::FFI = 0.012
Capture::Tiny = 0

[Prereqs]
constant = 1.32
FFI::CheckLib = 0.05

[Prereqs / DevPrereqs]
-phase = develop
Devel::PPPort = 3.28

[Author::Plicease::Upload]
cpan = 1

[PPPort]
filename = include/ppport.h

[Meta::Dynamic::Config]
[MetaNoIndex]
directory = examples

[InsertExample]
remove_boiler = 1

[Author::Plicease::Thanks]
current = Graham Ollis <plicease@cpan.org>
contributor = Bakkiaraj Murugesan (bakkiaraj)
contributor = Dylan Cali (calid)
contributor = pipcet
contributor = Zaki Mughal (zmughal)
contributor = Fitz Elliott (felliott)
contributor = Vickenty Fesunov (vyf)
contributor = Gregor Herrmann (gregoa)
contributor = Shlomi Fish (shlomif)
contributor = Damyan Ivanov
contributor = Ilya Pavlov (Ilya33)
